# Generated by Django 2.1.3 on 2019-06-04 06:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import tcms.core.models.base


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('management', '0001_initial'),
        ('testplans', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bug',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bug_id', models.CharField(max_length=25)),
                ('summary', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            bases=(models.Model, tcms.core.models.base.UrlMixin),
        ),
        migrations.CreateModel(
            name='BugSystem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True)),
                ('url_reg_exp', models.CharField(help_text='A valid Python format string such as http://bugs.example.com/%s', max_length=8192, verbose_name='URL format string')),
                ('validate_reg_exp', models.CharField(help_text='A valid JavaScript regular expression such as ^\\d$', max_length=128, verbose_name='RegExp for ID validation')),
                ('tracker_type', models.CharField(default='IssueTrackerType', help_text='This determines how Kiwi TCMS integrates with the IT system', max_length=128, verbose_name='Type')),
                ('base_url', models.CharField(blank=True, help_text='Base URL, for example <strong>https://bugzilla.example.com</strong>!\nLeave empty to disable!\n', max_length=1024, null=True, verbose_name='Base URL')),
                ('api_url', models.CharField(blank=True, help_text='This is the URL to which API requests will be sent. Leave empty to disable!', max_length=1024, null=True, verbose_name='API URL')),
                ('api_username', models.CharField(blank=True, max_length=256, null=True, verbose_name='API username')),
                ('api_password', models.CharField(blank=True, max_length=256, null=True, verbose_name='API password or token')),
            ],
            options={
                'verbose_name': 'Bug tracker',
                'verbose_name_plural': 'Bug trackers',
            },
            bases=(models.Model, tcms.core.models.base.UrlMixin),
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(db_column='category_id', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('parent_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testcases.Category', verbose_name='parent_category')),
            ],
            options={
                'verbose_name_plural': 'test case categories',
            },
            bases=(models.Model, tcms.core.models.base.UrlMixin),
        ),
        migrations.CreateModel(
            name='HistoricalTestCase',
            fields=[
                ('case_id', models.IntegerField(blank=True, db_index=True)),
                ('create_date', models.DateTimeField(blank=True, db_column='creation_date', editable=False)),
                ('is_automated', models.IntegerField(db_column='isautomated', default=0)),
                ('is_automated_proposed', models.BooleanField(default=False)),
                ('script', models.TextField(blank=True, null=True)),
                ('arguments', models.TextField(blank=True, null=True)),
                ('extra_link', models.CharField(blank=True, default=None, max_length=1024, null=True)),
                ('summary', models.CharField(max_length=255)),
                ('requirement', models.CharField(blank=True, max_length=255, null=True)),
                ('alias', models.CharField(blank=True, max_length=255)),
                ('notes', models.TextField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.TextField(null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('author', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical test case',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Suite',
            fields=[
                ('id', models.AutoField(db_column='suite_id', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suite', to='management.Product')),
            ],
            options={
                'verbose_name_plural': 'test suite',
            },
            bases=(models.Model, tcms.core.models.base.UrlMixin),
        ),
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('case_id', models.AutoField(primary_key=True, serialize=False)),
                ('create_date', models.DateTimeField(auto_now_add=True, db_column='creation_date')),
                ('is_automated', models.IntegerField(db_column='isautomated', default=0)),
                ('is_automated_proposed', models.BooleanField(default=False)),
                ('script', models.TextField(blank=True, null=True)),
                ('arguments', models.TextField(blank=True, null=True)),
                ('extra_link', models.CharField(blank=True, default=None, max_length=1024, null=True)),
                ('summary', models.CharField(max_length=255)),
                ('requirement', models.CharField(blank=True, max_length=255, null=True)),
                ('alias', models.CharField(blank=True, max_length=255)),
                ('notes', models.TextField(blank=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cases_as_author', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, tcms.core.models.base.UrlMixin),
        ),
        migrations.CreateModel(
            name='TestCaseComponent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testcases.TestCase')),
                ('component', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.Component')),
            ],
        ),
        migrations.CreateModel(
            name='TestCaseEmailSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notify_on_case_update', models.BooleanField(default=False)),
                ('notify_on_case_delete', models.BooleanField(default=False)),
                ('auto_to_case_author', models.BooleanField(default=False)),
                ('auto_to_case_tester', models.BooleanField(default=False)),
                ('auto_to_run_manager', models.BooleanField(default=False)),
                ('auto_to_run_tester', models.BooleanField(default=False)),
                ('auto_to_case_run_assignee', models.BooleanField(default=False)),
                ('cc_list', models.TextField(default='')),
                ('case', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='email_settings', to='testcases.TestCase')),
            ],
        ),
        migrations.CreateModel(
            name='TestCasePlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sortkey', models.IntegerField(blank=True, null=True)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testcases.TestCase')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testplans.TestPlan')),
            ],
        ),
        migrations.CreateModel(
            name='TestCaseStatus',
            fields=[
                ('id', models.AutoField(db_column='case_status_id', max_length=6, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Test case status',
                'verbose_name_plural': 'Test case statuses',
            },
            bases=(models.Model, tcms.core.models.base.UrlMixin),
        ),
        migrations.CreateModel(
            name='TestCaseTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testcases.TestCase')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='TestCaseText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_text_version', models.IntegerField()),
                ('create_date', models.DateTimeField(auto_now_add=True, db_column='creation_ts')),
                ('action', models.TextField(blank=True)),
                ('effect', models.TextField(blank=True)),
                ('setup', models.TextField(blank=True)),
                ('breakdown', models.TextField(blank=True)),
                ('author', models.ForeignKey(db_column='who', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='text', to='testcases.TestCase')),
            ],
            options={
                'ordering': ['case', '-case_text_version'],
            },
            bases=(models.Model, tcms.core.models.base.UrlMixin),
        ),
        migrations.AddField(
            model_name='testcase',
            name='case_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testcases.TestCaseStatus'),
        ),
        migrations.AddField(
            model_name='testcase',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_case', to='testcases.Category'),
        ),
        migrations.AddField(
            model_name='testcase',
            name='component',
            field=models.ManyToManyField(related_name='cases', through='testcases.TestCaseComponent', to='management.Component'),
        ),
        migrations.AddField(
            model_name='testcase',
            name='default_tester',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cases_as_default_tester', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='testcase',
            name='plan',
            field=models.ManyToManyField(related_name='case', through='testcases.TestCasePlan', to='testplans.TestPlan'),
        ),
        migrations.AddField(
            model_name='testcase',
            name='priority',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='priority_case', to='management.Priority'),
        ),
        migrations.AddField(
            model_name='testcase',
            name='reviewer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cases_as_reviewer', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='testcase',
            name='tag',
            field=models.ManyToManyField(related_name='case', through='testcases.TestCaseTag', to='management.Tag'),
        ),
        migrations.AddField(
            model_name='historicaltestcase',
            name='case_status',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='testcases.TestCaseStatus'),
        ),
        migrations.AddField(
            model_name='historicaltestcase',
            name='category',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='testcases.Category'),
        ),
        migrations.AddField(
            model_name='historicaltestcase',
            name='default_tester',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaltestcase',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaltestcase',
            name='priority',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='management.Priority'),
        ),
        migrations.AddField(
            model_name='historicaltestcase',
            name='reviewer',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='category',
            name='suite',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category', to='testcases.Suite'),
        ),
        migrations.AddField(
            model_name='bug',
            name='bug_system',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='testcases.BugSystem'),
        ),
        migrations.AddField(
            model_name='bug',
            name='case',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='case_bug', to='testcases.TestCase'),
        ),
    ]
